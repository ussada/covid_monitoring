[{"C:\\Data\\GitHub\\covid-monitoring\\src\\index.js":"1","C:\\Data\\GitHub\\covid-monitoring\\src\\App.js":"2","C:\\Data\\GitHub\\covid-monitoring\\src\\reportWebVitals.js":"3","C:\\Data\\GitHub\\covid-monitoring\\src\\pages\\home\\index.js":"4","C:\\Data\\GitHub\\covid-monitoring\\src\\pages\\home\\chart.js":"5","C:\\Data\\GitHub\\covid-monitoring\\src\\constants.js":"6","C:\\Data\\GitHub\\covid-monitoring\\src\\util\\index.js":"7","C:\\Data\\GitHub\\covid-monitoring\\src\\pages\\home\\styles.js":"8","C:\\Data\\GitHub\\covid-monitoring\\src\\pages\\home\\animate.js":"9","C:\\Data\\GitHub\\covid-monitoring\\src\\util\\api.js":"10","C:\\Data\\GitHub\\covid-monitoring\\src\\util\\date.js":"11","C:\\Data\\GitHub\\covid-monitoring\\src\\util\\util.js":"12"},{"size":500,"mtime":1608740087262,"results":"13","hashOfConfig":"14"},{"size":161,"mtime":1609661691251,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1608740087262,"results":"16","hashOfConfig":"14"},{"size":2717,"mtime":1609677306274,"results":"17","hashOfConfig":"14"},{"size":5867,"mtime":1609865621972,"results":"18","hashOfConfig":"14"},{"size":175,"mtime":1609676999461,"results":"19","hashOfConfig":"14"},{"size":149,"mtime":1609648512704,"results":"20","hashOfConfig":"14"},{"size":513,"mtime":1609662917805,"results":"21","hashOfConfig":"14"},{"size":2660,"mtime":1609865896460,"results":"22","hashOfConfig":"14"},{"size":2663,"mtime":1609523342140,"results":"23","hashOfConfig":"14"},{"size":745,"mtime":1609596258099,"results":"24","hashOfConfig":"14"},{"size":1308,"mtime":1609649094678,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1et53n2",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Data\\GitHub\\covid-monitoring\\src\\index.js",[],["53","54"],"C:\\Data\\GitHub\\covid-monitoring\\src\\App.js",[],"C:\\Data\\GitHub\\covid-monitoring\\src\\reportWebVitals.js",[],"C:\\Data\\GitHub\\covid-monitoring\\src\\pages\\home\\index.js",[],"C:\\Data\\GitHub\\covid-monitoring\\src\\pages\\home\\chart.js",[],"C:\\Data\\GitHub\\covid-monitoring\\src\\constants.js",[],"C:\\Data\\GitHub\\covid-monitoring\\src\\util\\index.js",[],"C:\\Data\\GitHub\\covid-monitoring\\src\\pages\\home\\styles.js",[],"C:\\Data\\GitHub\\covid-monitoring\\src\\pages\\home\\animate.js",["55"],"import React, {useState, useEffect, useRef} from \"react\";\r\n\r\nconst calculateBoundingBoxes = children => {\r\n    const boundingBoxes = {};\r\n\r\n    React.Children.forEach(children, child => {\r\n        const domNode = child.ref.current;\r\n        const nodeBoundingBox = domNode !== null ? domNode.getBoundingClientRect() : undefined;\r\n\r\n        boundingBoxes[child.key] = nodeBoundingBox;\r\n    });\r\n\r\n    return boundingBoxes;\r\n};\r\n\r\nconst usePrevious = value => {\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        ref.current = value;\r\n    }, [value]);\r\n\r\n    return ref.current;\r\n}\r\n\r\nconst AnimateElements = ({children, options = {}}) => {\r\n    const [boundingBox, setBoundingBox] = useState({});\r\n    const [prevBoundingBox, setPrevBoundingBox] = useState({});\r\n    const prevChildren = usePrevious(children);\r\n    const {motionDelay = 500} = options;\r\n  \r\n    useEffect(() => {\r\n        const newBoundingBox = calculateBoundingBoxes(children);\r\n        setBoundingBox(newBoundingBox);\r\n    }, [children]);\r\n  \r\n    useEffect(() => {\r\n        const prevBoundingBox = calculateBoundingBoxes(prevChildren);\r\n        setPrevBoundingBox(prevBoundingBox);\r\n    }, [prevChildren]);\r\n\r\n    useEffect(() => {\r\n        const hasPrevBoundingBox = Object.keys(prevBoundingBox).length;\r\n    \r\n        if (hasPrevBoundingBox) {\r\n            React.Children.forEach(children, child => {\r\n                const firstBox = prevBoundingBox[child.key];\r\n                const lastBox = boundingBox[child.key];\r\n\r\n                if (firstBox && lastBox) {\r\n                    const changeInY = firstBox.top - lastBox.top;\r\n    \r\n                    if (changeInY) {\r\n                        const domNode = child.ref.current;\r\n                        \r\n                        requestAnimationFrame(() => {\r\n                            // Before the DOM paints, invert child to old position\r\n                            domNode.style.transform = `translateY(${changeInY}px)`;\r\n                            domNode.style.transition = \"transform 0s\";\r\n                \r\n                            requestAnimationFrame(() => {\r\n                                // After the previous frame, remove\r\n                                // the transistion to play the animation\r\n                                domNode.style.transform = \"\";\r\n                                domNode.style.transition = `transform ${motionDelay}ms`;\r\n                            });\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }, [boundingBox, prevBoundingBox, children]);\r\n  \r\n    return children;\r\n};\r\n\r\nexport default AnimateElements;","C:\\Data\\GitHub\\covid-monitoring\\src\\util\\api.js",["56"],"import {useState, useEffect} from 'react';\r\nimport {DateUtil} from './';\r\n\r\nconst {isDate, dateToString} = DateUtil;\r\n\r\nconst queryParamParser = param => {\r\n    let paramString = Object.keys(param).map(name => {\r\n        let value;\r\n        \r\n        if(isDate(param[name]))\r\n            value = dateToString(param[name]);\r\n        else\r\n            value = param[name];\r\n\r\n        return `${name}=${value}`;\r\n    }).join('&');\r\n\r\n    return '?' + paramString;\r\n}\r\n\r\nconst useAPI = (method, url, params) => {\r\n    const {queryParam, bodyParam, pathParam} = params;\r\n    url += pathParam ? '/' + pathParam : '';\r\n    url += queryParam ? queryParamParser(queryParam) : '';\r\n    \r\n    const fetchOption = {\r\n        method: method,\r\n        headers: new Headers({\r\n            'Content-Type': 'application/json',\r\n        })\r\n    }\r\n\r\n    if (method !== 'GET' && bodyParam) fetchOption['body'] = JSON.stringify(bodyParam);\r\n\r\n    const [result, setResult] = useState({\r\n        loading: false,\r\n        data: [],\r\n        error: ''\r\n    });\r\n\r\n    const [refresh, setRefresh] = useState(false);\r\n    const refreshData = () => setRefresh(true);\r\n\r\n    useEffect(() => {\r\n        setResult({\r\n            ...result,\r\n            loading: true\r\n        });\r\n\r\n        fetch( url, fetchOption)\r\n            .then(res => {       \r\n                if (res.ok) {\r\n                    if (res.status !== 204) {\r\n                        return res.json();\r\n                    }\r\n                    else\r\n                        return {\r\n                            success: true\r\n                        }\r\n                }\r\n                else {\r\n                    let errorMsg = '';\r\n\r\n                    if (res.status)\r\n                        errorMsg += `[${res.status}]`;\r\n\r\n                    if (res.statusText)\r\n                        errorMsg += ` ${res.statusText}`;\r\n\r\n                    throw(new Error(errorMsg));\r\n                }\r\n            })\r\n            .then(data => {\r\n                setResult({\r\n                    loading: false,\r\n                    success: true,\r\n                    data\r\n                })\r\n            })\r\n            .catch( json => {\r\n                if( json.status === 'error' ) {\r\n                    throw json;\r\n                }\r\n                \r\n                return {\r\n                    loading: false,\r\n                    success: false,\r\n                    error: json\r\n                }\r\n            });\r\n\r\n        return () => {\r\n            setResult({});\r\n            setRefresh(false);\r\n        }\r\n    }, [refresh]);\r\n\r\n    return [{...result, refreshData}];\r\n}\r\n\r\nexport {\r\n    useAPI\r\n}","C:\\Data\\GitHub\\covid-monitoring\\src\\util\\date.js",[],"C:\\Data\\GitHub\\covid-monitoring\\src\\util\\util.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":72,"column":8,"nodeType":"63","endLine":72,"endColumn":48,"suggestions":"64"},{"ruleId":"61","severity":1,"message":"65","line":96,"column":8,"nodeType":"63","endLine":96,"endColumn":17,"suggestions":"66"},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'motionDelay'. Either include it or remove the dependency array.","ArrayExpression",["69"],"React Hook useEffect has missing dependencies: 'fetchOption', 'result', and 'url'. Either include them or remove the dependency array. You can also do a functional update 'setResult(r => ...)' if you only need 'result' in the 'setResult' call.",["70"],"no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},{"desc":"73","fix":"74"},"Update the dependencies array to be: [boundingBox, prevBoundingBox, children, motionDelay]",{"range":"75","text":"76"},"Update the dependencies array to be: [fetchOption, refresh, result, url]",{"range":"77","text":"78"},[2553,2593],"[boundingBox, prevBoundingBox, children, motionDelay]",[2580,2589],"[fetchOption, refresh, result, url]"]